name: Issue to PR Converter

on:
  issue_comment:
    types: [created]
  issues:
    types: [labeled]

jobs:
  convert-to-pr:
    if: >
      (github.event_name == 'issue_comment' && 
       contains(github.event.comment.body, '/convert') &&
       (github.event.comment.author_association == 'OWNER' || 
        github.event.comment.author_association == 'COLLABORATOR' || 
        github.event.comment.author_association == 'MEMBER')) ||
      (github.event_name == 'issues' && 
       contains(github.event.label.name, 'ready-to-implement'))
    
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          
      - name: Setup Node.js (if needed)
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Get issue details
        id: issue
        run: |
          echo "issue_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
          echo "issue_title=${{ github.event.issue.title }}" >> $GITHUB_OUTPUT
          echo "issue_body<<EOF" >> $GITHUB_OUTPUT
          echo "${{ github.event.issue.body }}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Create branch name
        id: branch
        run: |
          # Issue baÅŸlÄ±ÄŸÄ±ndan branch adÄ± oluÅŸtur
          title="${{ steps.issue.outputs.issue_title }}"
          branch_name="issue-${{ steps.issue.outputs.issue_number }}-$(echo "${title,,}" | sed 's/[^a-z0-9]/-/g' | sed 's/--*/-/g' | sed 's/^-\|-$//g')"
          echo "branch_name=${branch_name}" >> $GITHUB_OUTPUT
          
      - name: Create and switch to new branch
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git checkout -b ${{ steps.branch.outputs.branch_name }}
          
      - name: Create initial commit for the issue
        run: |
          # README'ye issue bilgilerini ekle
          echo "" >> README.md
          echo "## Working on Issue #${{ steps.issue.outputs.issue_number }}" >> README.md
          echo "**${{ steps.issue.outputs.issue_title }}**" >> README.md
          echo "" >> README.md
          echo "This branch was automatically created to address the issue." >> README.md
          echo "" >> README.md
          
          git add README.md
          git commit -m "Start working on #${{ steps.issue.outputs.issue_number }}: ${{ steps.issue.outputs.issue_title }}

This commit was automatically created by GitHub Actions to start working on the issue.

Closes #${{ steps.issue.outputs.issue_number }}"
          
      - name: Push branch
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin ${{ steps.branch.outputs.branch_name }}
          
      - name: Create Pull Request
        run: |
          # Create JSON payload file to avoid escaping issues
          cat > pr_payload.json << EOF
          {
            "title": "Fix #${{ steps.issue.outputs.issue_number }}: ${{ steps.issue.outputs.issue_title }}",
            "body": "## Resolves Issue\n\nCloses #${{ steps.issue.outputs.issue_number }}\n\n## Description\n\n${{ steps.issue.outputs.issue_body }}\n\n## Changes\n\n- [ ] Implementation pending\n- [ ] Tests added\n- [ ] Documentation updated\n\n---\n\nThis PR was automatically created from issue #${{ steps.issue.outputs.issue_number }}\n\nðŸ¤– Generated by GitHub Actions",
            "head": "${{ steps.branch.outputs.branch_name }}",
            "base": "master"
          }
          EOF
          
          # Create PR using the JSON file
          curl -s -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls" \
            --data @pr_payload.json
          
      - name: Add comment to issue
        run: |
          # Create JSON payload file for comment
          cat > comment_payload.json << EOF
          {
            "body": "ðŸš€ A pull request has been automatically created for this issue!\n\n**Branch:** \`${{ steps.branch.outputs.branch_name }}\`\n\nYou can now start working on this branch and push your changes. The PR will be updated automatically."
          }
          EOF
          
          # Add comment using GitHub REST API
          curl -s -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ steps.issue.outputs.issue_number }}/comments" \
            --data @comment_payload.json